// THIS FILE IS GENERATED BY SALT. DO NOT EDIT.

options
{
        directory          "{{ BINDDNS.work_rootdir }}";  // "Working" directory
        dump-file          "{{ BINDDNS.dump_file }}";
        statistics-file    "{{ BINDDNS.statistics_file }}";
        memstatistics-file "{{ BINDDNS.memstatistics_file }}";
        secroots-file      "{{ BINDDNS.secroots_file }}";
        recursing-file     "{{ BINDDNS.recursing_file }}";

        /*
          Specify listenning interfaces. You can use list of addresses (';' is
          delimiter) or keywords "any"/"none"
        */
        listen-on port {{ BINDDNS.listen.ipv4.port }}  { {{ BINDDNS.listen.ipv4.ip }} };
        listen-on-v6 port {{ BINDDNS.listen.ipv6.port }}  { {{ BINDDNS.listen.ipv6.ip }} };

        /*
          Access restrictions

          There are two important options:
            allow-query { argument; };
              - allow queries for authoritative data

            allow-query-cache { argument; };
              - allow queries for non-authoritative data (mostly cached data)

          You can use address, network address or keywords "any"/"localhost"/"none" as argument
          Examples:
            allow-query { localhost; 10.0.0.1; 192.168.1.0/8; };
            allow-query-cache { ::1; fe80::5c63:a8ff:fe2f:4526; 10.0.0.1; };
        */
        allow-query             { {{ BINDDNS.allow_query }} };
        allow-query-cache       { {{ BINDDNS.allow_query_cache }} };

        /* Enable/disable recursion - recursion yes/no;

         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
         - If you are building a RECURSIVE (caching) DNS server, you need to enable 
           recursion. 
         - If your recursive DNS server has a public IP address, you MUST enable access 
           control to limit queries to your legitimate users. Failing to do so will
           cause your server to become part of large scale DNS amplification 
           attacks. Implementing BCP38 within your network would greatly
           reduce such attack surface 
         */
        recursion {{ BINDDNS.recursion }};

        /* DNSSEC related options. See information about keys ("Trusted keys", bellow) */

        /* Enable serving of DNSSEC related data - enable on both authoritative
           and recursive servers DNSSEC aware servers */
        dnssec-enable {{ BINDDNS.dnssec.enabled }};

        /* Enable DNSSEC validation on recursive servers */
        dnssec-validation {{ BINDDNS.dnssec.validation }};

        {% if grains['osfinger'] == 'CentOS Linux-7' %}
        /* Path to ISC DLV key */
        bindkeys-file "/etc/named.root.key";
        {% endif %}

        pid-file "/run/named/named.pid";
        session-keyfile "/run/named/session.key";

        managed-keys-directory "{{ BINDDNS.managed_keys_directory }}";

    {% if grains['os'] == 'Fedora' %}
    /* In Fedora we use system-wide Crypto Policy */
    /* https://fedoraproject.org/wiki/Changes/CryptoPolicy */
    include "/etc/crypto-policies/back-ends/bind.config";
    {% endif %}
};

logging 
{
/*      If you want to enable debugging, eg. using the 'rndc trace' command,
 *      named will try to write the 'named.run' file in the $directory (/var/named).
 *      By default, SELinux policy does not allow named to modify the /var/named directory,
 *      so put the default debug log file in data/ :
 */
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
        type hint;
        file "{{ BINDDNS.zone_hint_file }}";
};

{% if grains['os_family'] == 'Suse' %}
zone "localhost" in {
        type master;
        file "localhost.zone";
};

zone "0.0.127.in-addr.arpa" in {
        type master;
        file "127.0.0.zone";
};

zone "0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa" IN {
    type master;
    file "127.0.0.zone";
};
{% endif %}

{% if grains['os_family'] != 'Suse' %}
include "{{ BINDDNS.rfc1918_zone_file }}";
include "{{ BINDDNS.key_file }}";
{% endif %}

include "{{ BINDDNS.bind_config_rootdir }}/zones.conf";
